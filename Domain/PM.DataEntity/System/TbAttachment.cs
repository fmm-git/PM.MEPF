//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.36440
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Dos.ORM;

namespace PM.DataEntity
{
    /// <summary>
    /// 实体类TbAttachment。(属性说明自动提取数据库字段的描述信息)
    /// </summary>
    [Table("TbAttachment")]
    [Serializable]
    public partial class TbAttachment : Entity
    {
        #region Model
		private int _id;
		private string _FileID;
		private string _FunModule;
		private string _UserCode;
		private string _FileToKen;
		private long _FileSize;
		private string _FileName;
		private string _FileType;
		private string _FileModified;
		private string _ServerCode;
		private string _FileStoragePath;
		private long _StorageSize;
		private int _StorageOver;
		private DateTime _StartTime;
		private DateTime _LastTime;
        public string UserName{get;set;}

		/// <summary>
		/// 
		/// </summary>
		[Field("id")]
		public int id
		{
			get{ return _id; }
			set
			{
				this.OnPropertyValueChange("id");
				this._id = value;
			}
		}
		/// <summary>
		/// 文件唯一标识
		/// </summary>
		[Field("FileID")]
		public string FileID
		{
			get{ return _FileID; }
			set
			{
				this.OnPropertyValueChange("FileID");
				this._FileID = value;
			}
		}
		/// <summary>
		/// 上传文件的功能模块标识
		/// </summary>
		[Field("FunModule")]
		public string FunModule
		{
			get{ return _FunModule; }
			set
			{
				this.OnPropertyValueChange("FunModule");
				this._FunModule = value;
			}
		}
		/// <summary>
		/// 文件的上传用户代码
		/// </summary>
		[Field("UserCode")]
		public string UserCode
		{
			get{ return _UserCode; }
			set
			{
				this.OnPropertyValueChange("UserCode");
				this._UserCode = value;
			}
		}
		/// <summary>
		/// 文件上传的标识令牌
		/// </summary>
		[Field("FileToKen")]
		public string FileToKen
		{
			get{ return _FileToKen; }
			set
			{
				this.OnPropertyValueChange("FileToKen");
				this._FileToKen = value;
			}
		}
		/// <summary>
		/// 上传的文件大小(总字节数)
		/// </summary>
		[Field("FileSize")]
		public long FileSize
		{
			get{ return _FileSize; }
			set
			{
				this.OnPropertyValueChange("FileSize");
				this._FileSize = value;
			}
		}
		/// <summary>
		/// 文件原始名称
		/// </summary>
		[Field("FileName")]
		public string FileName
		{
			get{ return _FileName; }
			set
			{
				this.OnPropertyValueChange("FileName");
				this._FileName = value;
			}
		}
		/// <summary>
		/// 文件原始类型
		/// </summary>
		[Field("FileType")]
		public string FileType
		{
			get{ return _FileType; }
			set
			{
				this.OnPropertyValueChange("FileType");
				this._FileType = value;
			}
		}
		/// <summary>
		/// 文件最后修改时间
		/// </summary>
		[Field("FileModified")]
		public string FileModified
		{
			get{ return _FileModified; }
			set
			{
				this.OnPropertyValueChange("FileModified");
				this._FileModified = value;
			}
		}
		/// <summary>
		/// 实际保存文件的服务器代码
		/// </summary>
		[Field("ServerCode")]
		public string ServerCode
		{
			get{ return _ServerCode; }
			set
			{
				this.OnPropertyValueChange("ServerCode");
				this._ServerCode = value;
			}
		}
		/// <summary>
		/// 文件保存的全路径(包括保存的文件名称)
		/// </summary>
		[Field("FileStoragePath")]
		public string FileStoragePath
		{
			get{ return _FileStoragePath; }
			set
			{
				this.OnPropertyValueChange("FileStoragePath");
				this._FileStoragePath = value;
			}
		}
		/// <summary>
		/// 文件已经上传的大小(已上传的字节数)
		/// </summary>
		[Field("StorageSize")]
		public long StorageSize
		{
			get{ return _StorageSize; }
			set
			{
				this.OnPropertyValueChange("StorageSize");
				this._StorageSize = value;
			}
		}
		/// <summary>
		/// 文件存储完成标识(0已完成,1未完成)
		/// </summary>
		[Field("StorageOver")]
		public int StorageOver
		{
			get{ return _StorageOver; }
			set
			{
				this.OnPropertyValueChange("StorageOver");
				this._StorageOver = value;
			}
		}
		/// <summary>
		/// 首次开始上传的时间
		/// </summary>
		[Field("StartTime")]
		public DateTime StartTime
		{
			get{ return _StartTime; }
			set
			{
				this.OnPropertyValueChange("StartTime");
				this._StartTime = value;
			}
		}
		/// <summary>
		/// 最后一次上传的时间
		/// </summary>
		[Field("LastTime")]
		public DateTime LastTime
		{
			get{ return _LastTime; }
			set
			{
				this.OnPropertyValueChange("LastTime");
				this._LastTime = value;
			}
		}
		#endregion

		#region Method
        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        public override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
				_.FileID,
			};
        }
		/// <summary>
        /// 获取实体中的标识列
        /// </summary>
        public override Field GetIdentityField()
        {
            return _.id;
        }
        /// <summary>
        /// 获取列信息
        /// </summary>
        public override Field[] GetFields()
        {
            return new Field[] {
				_.id,
				_.FileID,
				_.FunModule,
				_.UserCode,
				_.FileToKen,
				_.FileSize,
				_.FileName,
				_.FileType,
				_.FileModified,
				_.ServerCode,
				_.FileStoragePath,
				_.StorageSize,
				_.StorageOver,
				_.StartTime,
				_.LastTime,
			};
        }
        /// <summary>
        /// 获取值信息
        /// </summary>
        public override object[] GetValues()
        {
            return new object[] {
				this._id,
				this._FileID,
				this._FunModule,
				this._UserCode,
				this._FileToKen,
				this._FileSize,
				this._FileName,
				this._FileType,
				this._FileModified,
				this._ServerCode,
				this._FileStoragePath,
				this._StorageSize,
				this._StorageOver,
				this._StartTime,
				this._LastTime,
			};
        }
        /// <summary>
        /// 是否是v1.10.5.6及以上版本实体。
        /// </summary>
        /// <returns></returns>
        public override bool V1_10_5_6_Plus()
        {
            return true;
        }
        #endregion

		#region _Field
        /// <summary>
        /// 字段信息
        /// </summary>
        public class _
        {
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*", "TbAttachment");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field id = new Field("id", "TbAttachment", "");
            /// <summary>
			/// 文件唯一标识
			/// </summary>
			public readonly static Field FileID = new Field("FileID", "TbAttachment", "文件唯一标识");
            /// <summary>
			/// 上传文件的功能模块标识
			/// </summary>
			public readonly static Field FunModule = new Field("FunModule", "TbAttachment", "上传文件的功能模块标识");
            /// <summary>
			/// 文件的上传用户代码
			/// </summary>
			public readonly static Field UserCode = new Field("UserCode", "TbAttachment", "文件的上传用户代码");
            /// <summary>
			/// 文件上传的标识令牌
			/// </summary>
			public readonly static Field FileToKen = new Field("FileToKen", "TbAttachment", "文件上传的标识令牌");
            /// <summary>
			/// 上传的文件大小(总字节数)
			/// </summary>
			public readonly static Field FileSize = new Field("FileSize", "TbAttachment", "上传的文件大小(总字节数)");
            /// <summary>
			/// 文件原始名称
			/// </summary>
			public readonly static Field FileName = new Field("FileName", "TbAttachment", "文件原始名称");
            /// <summary>
			/// 文件原始类型
			/// </summary>
			public readonly static Field FileType = new Field("FileType", "TbAttachment", "文件原始类型");
            /// <summary>
			/// 文件最后修改时间
			/// </summary>
			public readonly static Field FileModified = new Field("FileModified", "TbAttachment", "文件最后修改时间");
            /// <summary>
			/// 实际保存文件的服务器代码
			/// </summary>
			public readonly static Field ServerCode = new Field("ServerCode", "TbAttachment", "实际保存文件的服务器代码");
            /// <summary>
			/// 文件保存的全路径(包括保存的文件名称)
			/// </summary>
			public readonly static Field FileStoragePath = new Field("FileStoragePath", "TbAttachment", "文件保存的全路径(包括保存的文件名称)");
            /// <summary>
			/// 文件已经上传的大小(已上传的字节数)
			/// </summary>
			public readonly static Field StorageSize = new Field("StorageSize", "TbAttachment", "文件已经上传的大小(已上传的字节数)");
            /// <summary>
			/// 文件存储完成标识(0已完成,1未完成)
			/// </summary>
			public readonly static Field StorageOver = new Field("StorageOver", "TbAttachment", "文件存储完成标识(0已完成,1未完成)");
            /// <summary>
			/// 首次开始上传的时间
			/// </summary>
			public readonly static Field StartTime = new Field("StartTime", "TbAttachment", "首次开始上传的时间");
            /// <summary>
			/// 最后一次上传的时间
			/// </summary>
			public readonly static Field LastTime = new Field("LastTime", "TbAttachment", "最后一次上传的时间");
        }
        #endregion
	}
}
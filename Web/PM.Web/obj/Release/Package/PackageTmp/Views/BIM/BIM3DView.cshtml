@{
    ViewBag.Title = "BIM3DView";
    Layout = null;
}
<link href="~/Content/static/model/index.css" rel="stylesheet" />
<link href="~/Content/static/icon/extend/iconfont.css" rel="stylesheet" />
<script src="~/Content/static/model/BIM3DInterface.js"></script>
<script src="~/Content/static/model/BIM3DViewer.js"></script>
<style type="text/css">
    * {
        margin: 0px;
        padding: 0px;
    }

    #menu {
        background-color: #eee;
        height: 26px;
        margin: 0 auto;
    }

    .model-menu ul {
        list-style: none;
        z-index: 4;
    }

        .model-menu ul li {
            float: left;
            font-size: 12px;
            line-height: 26px;
            text-align: left;
            position: relative;
        }

    .model-menu a {
        text-decoration: none;
        color: #000;
        padding: 0px 0px 0px 10px;
        display: block;
        width: 100px;
    }

        .model-menu a:hover {
            color: #FFF;
            background-color: #666;
        }

    .model-menu ul li ul li {
        float: none;
        border-left: none;
        margin-top: 2px;
        background-color: #eee;
    }

        .model-menu ul li ul li a {
            font-size: 10px;
        }

    .model-menu ul li ul {
        width: 110px;
        position: absolute;
        left: 0px;
        top: 26px;
        display: none;
    }

    .model-main-card {
        margin: 0 auto;
        position: relative;
        background-color: #f2f2f2;
        width: 95%;
        height: 92%;
    }

    .model-body-card {
        -webkit-box-shadow: 0 0 4px rgba(0, 0, 0, .3);
        -moz-box-shadow: 0 0 4px rgba(0, 0, 0, .3);
        box-shadow: 0 0 4px rgba(0, 0, 0, .3);
        background-color: #fff;
        padding: 10px;
        width: 100%;
        height: 100%;
    }

    .model-main {
        position: absolute;
        z-index: 2;
        width: 100%;
        height: 90%;
    }

    .box-main {
        width: 100%;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-pack: justify;
        justify-content: space-between;
        color: #fff;
    }

    .middle-main {
        position: relative;
    }

    .model-info-box {
        position: absolute;
        top: 40px;
        width: 180px;
        height: 240px;
        left: 10px;
        z-index: 3;
    }

    .model-info-main {
        background-color: rgba(0, 0, 0, .4);
        width: 100%;
        height: 100%;
        border-radius: 4px;
        overflow: auto; /*当内容超过，出现滚动条*/
    }

        .model-info-main::-webkit-scrollbar { /*滚动条整体*/
            width: 4px;
        }

        .model-info-main::-webkit-scrollbar-track { /*滚动条轨道*/
            background: #999;
            border-radius: 2px;
        }

        .model-info-main::-webkit-scrollbar-thumb { /*滚动条里面的滑块*/
            background: white;
            border-radius: 10px;
        }

            .model-info-main::-webkit-scrollbar-thumb:hover { /*滚动条鼠标事件，鼠标放上去出现的事件*/
                background: #333;
            }

        .model-info-main::-webkit-scrollbar-corner { /*滚动条边角*/
            background: #179a16;
        }

    .model-info-content {
        padding: 8px 8px;
    }

    .model-info-title {
        width: 160px;
        font-size: 12px;
        border-radius: 4px 4px 0px 0px;
        background-color: rgba(255, 255, 255, 0.2);
        margin-bottom: 2px;
    }

    .model-info-family {
        padding: 2px 1px 1px 4px;
    }

    .model-info-type {
        padding: 1px 1px 2px 4px;
    }

    .mu-item {
        height: 17px;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        margin-left: 4px;
        color: rgba(255,255,255,.99);
    }

    .mu-item-wrapper {
        display: block;
        color: inherit;
        position: relative;
        outline: none;
        cursor: pointer;
        background-color: rgba(255, 255, 255, 0.2);
    }
    /*.mu-item-wrapper :hover{
            background-color: rgba(0,0,0,.1);
        }*/
    .mu-item-action {
        min-width: 20px;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        height: 100%;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        color: rgba(255,255,255,.99);
    }

    .mu-item-title {
        width: 100%;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        word-wrap: break-word;
        font-size: 12px;
    }

    .model-info-content ul {
        list-style: none;
    }

        .model-info-content ul a {
            font-size: 11px;
            color: #ffffff;
            text-decoration: none;
        }

    .model-nav-item {
        width: 160px;
        float: left;
    }

    .model-info-item-li {
        width: 160px;
        float: left;
    }

    .model-info-item-left {
        float: left;
        width: 79px;
        text-align: left;
        line-height: 20px;
        height: 20px;
        border-left: dashed 1px #ffffff;
        border-top: none;
        border-right: dashed 1px #ffffff;
        border-bottom: dashed 1px #ffffff;
    }

    .model-info-item-right {
        float: left;
        width: 78px;
        text-align: left;
        line-height: 20px;
        height: 20px;
        border-left: none;
        border-top: none;
        border-right: dashed 1px #ffffff;
        border-bottom: dashed 1px #ffffff;
    }

    .model-info-item-text {
        font-size: 9px;
        margin-left: 4px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .select-part-model {
        position: absolute;
        top: 5px;
        width: 200px;
        height: 40px;
        left: 10px;
        z-index: 3;
    }

    .select-part-main {
        width: 100%;
        height: 100%;
    }

    .switch-map {
        position: absolute;
        top: 10px;
        width: 20px;
        height: 20px;
        right: 10px;
        z-index: 3;
    }

    .switch-main {
        width: 100%;
        height: 100%;
    }

        .switch-main a {
            text-decoration: none;
            margin-left: 5px;
        }

    .switch-menu-icon {
        width: 1.4em;
        height: 1.4em;
        vertical-align: -0.15em;
        fill: currentColor;
        overflow: hidden;
    }

    .side-button {
        position: absolute;
        width: 35px;
        height: 22px;
        right: 10px;
        z-index: 3;
    }

    .place-order-model {
        top: 40px;
    }

    .sign-for-model {
        top: 65px;
    }

    .install-model {
        top: 90px;
    }

    .data-model {
        top: 115px;
    }

    .side-button-main {
        background-color: #1E90FF;
        width: 100%;
        height: 100%;
        border-radius: 4px;
    }

        .side-button-main a {
            text-decoration: none;
        }

    .side-button-a {
        color: #fff;
        font-size: 12px;
        line-height: 25px;
        padding: 6px 2px 2px 5px;
    }

    .legend-model {
        position: absolute;
        top: 150px;
        width: 85px;
        height: 95px;
        right: 10px;
        z-index: 3;
    }

    .legend-main {
        background-color: rgba(0, 0, 0, .4);
        width: 100%;
        height: 100%;
    }

    .legend-content {
        padding: 10px 3px 1px 5px;
    }

    .legend-list {
        list-style: none;
        margin: 0px;
        padding: 0px;
    }

    .legend-list-li {
        line-height: 14px;
    }

    .bonyong-badge {
        width: 18px;
        height: 10px;
        margin-right: 2px;
        position: relative;
        margin-bottom: -2px;
        display: inline-block;
        background-color: #FF5722;
    }

    .bonyong-bg-dark-orange {
        background-color: #FF8C00 !important;
    }

    .bonyong-bg-dark-yellow {
        background-color: #FFFF00 !important;
    }

    .bonyong-bg-green {
        background-color: #008000 !important;
    }

    .bonyong-bg-light-grey {
        background-color: #D3D3D3 !important;
    }

    .bonyong-bg-doder-blue {
        background-color: #1E90FF !important;
    }

    .bonyong-bg-turquoise {
        background-color: #40E0D0 !important;
    }

    .bonyong-badge-word {
        margin-left: 5px;
        font-size: 0.6em;
    }

    .progress-overview-box {
        position: absolute;
        top: 20px;
        width: 150px;
        height: 282px;
        right: 50px;
        z-index: 4;
        display: none;
    }

    .progress-overview-main {
        background-color: rgba(0, 0, 0, .6);
        width: 100%;
        height: 100%;
        border-radius: 5px;
    }

    .progress-overview-points {
        width: 160px;
        text-align: center;
        font-size: 12px;
        font-weight: 700;
        padding-top: 5px;
    }

    .progress-first-item {
        width: 140px;
        padding: 0px 10px 0px 10px;
        height: 85px;
    }

    .progress-next-item {
        width: 140px;
        padding: 0px 10px 0px 10px;
        height: 128px;
    }

    .progress-next-component {
        width: 135px;
        text-align: center;
        height: 13px;
        line-height: 13px;
    }

    .progress-next-type {
        width: 135px;
        text-align: center;
        height: 13px;
        line-height: 13px;
    }

    .progress-last-item {
        width: 140px;
        padding: 0px 10px 2px 10px;
    }

    .progress-overview-head {
        width: 135px;
        text-align: center;
        height: 9px;
        font-size: 10px;
        display: inline-block;
        -webkit-transform: scale(0.9);
    }

    .overview-info-item {
        width: 140px;
        height: 9px;
    }

    .overview-info-left {
        width: 70px;
        float: left;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-size: 10px;
        display: inline-block;
        -webkit-transform: scale(0.8);
    }

    .overview-info-right {
        width: 70px;
        float: left;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-size: 10px;
        display: inline-block;
        -webkit-transform: scale(0.8);
    }

    .hr-dotted {
        border-style: dotted;
    }

    .hrm {
        display: block;
        height: 0;
        overflow: hidden;
        font-size: 0;
        border-width: 1px 0 0 0;
        border-top: 1px solid #ffffff;
        margin: 12px 0;
        border-top-color: rgba(255, 255, 255, 0.6);
    }
</style>

<div class="model-main-card">
    <div class="model-body-card">
        <div id="menu" class="model-menu">
            <ul>
                <li class="navmenu">
                    <a href="javascript:;"><i class="iconfont iconthin-_pencil_rul"></i>&nbsp;模型测量</a>
                    <ul>
                        <li>
                            <a href="javascript:coordinateMeasure();"> <i class="iconfont iconsanweizuobiao"></i>&nbsp;坐标测量</a>
                        </li>
                        <li>
                            <a href="javascript:twoPointsDistance();"> <i class="iconfont iconliangdianjuli"></i>&nbsp;两点距离</a>
                        </li>
                        <li>
                            <a href="javascript:pointLineDistance();"> <i class="iconfont icondianxianjuli"></i>&nbsp;点线距离</a>
                        </li>
                        <li>
                            <a href="javascript:pointFaceDistance();"> <i class="iconfont iconbianjiwangdianmian"></i>&nbsp;点面距离</a>
                        </li>
                        <li>
                            <a href="javascript:twoFacesDistance();"> <i class="iconfont icondimianjuli"></i>&nbsp;对象间距离</a>
                        </li>
                        <li>
                            <a href="javascript:threePointsAngle();"> <i class="iconfont iconjiaodu"></i>&nbsp;三点角度</a>
                        </li>
                        <li>
                            <a href="javascript:threePointsRadius();"> <i class="iconfont iconsandianyuan3"></i>&nbsp;三点圆半径</a>
                        </li>
                        <li><a href="javascript:getFaceArea();"> <i class="iconfont iconmianji"></i>&nbsp;表面面积</a></li>
                        <li><a href="javascript:getModelVolume();"> <i class="iconfont icontiji"></i>&nbsp;对象体积</a></li>
                    </ul>
                </li>
                <li class="navmenu">
                    <a href="javascript:;"><i class="iconfont icongeli"></i>&nbsp;可视操作</a>
                    <ul>
                        <li>
                            <a href="javascript:setModelHide();"> <i class="iconfont iconyincang"></i>&nbsp;隐藏选中对象</a>
                        </li>
                        <li>
                            <a href="javascript:setOtherModelHide();"> <i class="iconfont iconyincang1"></i>&nbsp;隐藏非选中对象</a>
                        </li>
                        <li>
                            <a href="javascript:cancelModelHide();"> <i class="iconfont iconxianshi_huaban"></i>&nbsp;取消隐藏</a>
                        </li>
                        <li>
                            <a href="javascript:setModelQuarantine();"> <i class="iconfont iconfenlishiguanli"></i>&nbsp;隔离选中模块</a>
                        </li>
                        <li>
                            <a href="javascript:setOtherModelQuarantine();"> <i class="iconfont iconseparate"></i>&nbsp;隔离非选中模块</a>
                        </li>
                        <li>
                            <a href="javascript:cancelModelQuarantine();"> <i class="iconfont iconfenli"></i>&nbsp;取消隔离</a>
                        </li>

                    </ul>
                </li>
                <li class="navmenu">
                    <a href="javascript:;"><i class="iconfont iconshitupouqiehe"></i>&nbsp;剖切查看</a>
                    <ul>
                        <li>
                            <a href="javascript:startFaceSlice();"> <i class="iconfont iconpouqie"></i>&nbsp;自由剖切</a>
                        </li>
                        <li>
                            <a href="javascript:startXYSlice();">
                                <i class="iconfont iconXYzuobiaozhou"></i>&nbsp;XY剖切
                            </a>
                        </li>
                        <li>
                            <a href="javascript:startYZSlice();">
                                <i class="iconfont iconZYzuobiaozhou"></i>&nbsp;YZ剖切
                            </a>
                        </li>
                        <li>
                            <a href="javascript:startZXSlice();">
                                <i class="iconfont iconXZzuobiaozhou"></i>&nbsp;ZX剖切
                            </a>
                        </li>
                        <li>
                            <a href="javascript:startBoxSlice();">
                                <i class="iconfont iconpouqiehe"></i>&nbsp;剖切盒
                            </a>
                        </li>
                        <li>
                            <a href="javascript:startEdgeSlice();"> <i class="iconfont iconpouqie1"></i>&nbsp;直线法平面剖切</a>
                        </li>
                        <li><a href="javascript:openSliceCompass();"> <i class="iconfont icondakai2"></i>&nbsp;开启剖切面罗盘</a>
                        <li>
                            <a href="javascript:closeSliceCompass();"> <i class="iconfont iconicon-test"></i>&nbsp;关闭剖切面罗盘</a>
                        </li>
                    </ul>
                </li>
                <li class="navmenu">
                    <a href="javascript:;"><i class="iconfont iconweibiaoti1"></i>&nbsp;视图标注</a>
                    <ul>
                        <li><a href="javascript:wordsMark();"> <i class="iconfont iconwenben"></i>&nbsp;文本标注</a></li>
                        <li>
                            <a href="javascript:rectangleMark();"> <i class="iconfont iconjuxing"></i>&nbsp;矩形标注</a>
                        </li>
                        <li>
                            <a href="javascript:circularMark();"> <i class="iconfont iconyuanxing"></i>&nbsp;圆形标注</a>
                        </li>
                        <li>
                            <a href="javascript:ellipseMark();"> <i class="iconfont icontuoyuanxing"></i>&nbsp;椭圆标注</a>
                        </li>
                        <li>
                            <a href="javascript:arrowheadMark();"> <i class="iconfont iconjiantou_zuoshang"></i>&nbsp;箭头标注</a>
                        </li>
                        <li>
                            <a href="javascript:polygonMark();"> <i class="iconfont iconduobianxing"></i>&nbsp;多边形标注</a>
                        </li>
                    </ul>
                </li>
            </ul>
            <!-- <button type="button" onclick="remove3DModelFile();"> 测试</button>-->

        </div>
        <div id="myContainer" class="model-main">
        </div>
        <div class="box-main">
            <div class="middle-main">
                <div class="model-info-box" id="modelInfoBox" style="display:none">
                    <div class="model-info-main">
                        <div class="model-info-content">
                            <div class="model-info-title" id="modelInfoTitle">
                            </div>
                            <ul id="propertyGroupList"></ul>
                        </div>
                    </div>
                </div>
                <div class="select-part-model">
                    <div class="select-part-main" id="selectPartMain">
                        <!--<p>已选择零件:0个</p>-->
                    </div>
                </div>
                <div class="switch-map">
                    <div class="switch-main">
                        <a href="javascript:progressOverview();" title="进度概况" class="work-type-a">
                            <svg class="switch-menu-icon" aria-hidden="true">
                                <use xlink:href="#iconcaidanguanli"></use>
                            </svg>
                        </a>
                    </div>
                </div>
                <div class="side-button place-order-model">
                    <div class="side-button-main">
                        <a href="javascript:placeOrder();" class="side-button-a">
                            下单
                        </a>
                    </div>
                </div>
                <div class="side-button sign-for-model">
                    <div class="side-button-main">
                        <a href="javascript:componentSignFor();" class="side-button-a">
                            签收
                        </a>
                    </div>
                </div>
                <div class="side-button install-model">
                    <div class="side-button-main">
                        <a href="javascript:componentInstall();" class="side-button-a">
                            安装
                        </a>
                    </div>
                </div>
                <div class="side-button data-model">
                    <div class="side-button-main">
                        <a href="javascript:switch3DMap();" class="side-button-a">
                            资料
                        </a>
                    </div>
                </div>
                <div class="legend-model">
                    <div class="legend-main">
                        <div class="legend-content">
                            <ul class="legend-list">
                                <li class="legend-list-li">
                                    <span class="bonyong-badge bonyong-bg-light-grey"></span><span class="bonyong-badge-word">未开始</span>
                                </li>
                                <li class="legend-list-li">
                                    <span class="bonyong-badge bonyong-bg-dark-yellow"></span><span class="bonyong-badge-word">已下单</span>
                                </li>
                                <li class="legend-list-li">
                                    <span class="bonyong-badge bonyong-bg-dark-orange"></span><span class="bonyong-badge-word">加工中</span>
                                </li>
                                <li class="legend-list-li">
                                    <span class="bonyong-badge bonyong-bg-doder-blue"></span><span class="bonyong-badge-word">加工完成</span>
                                </li>
                                <li class="legend-list-li">
                                    <span class="bonyong-badge bonyong-bg-green"></span><span class="bonyong-badge-word">安装完成</span>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="progress-overview-box">
                    <div class="progress-overview-main" id="progressOverviewMain">

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    function getBim3DJsonfile(folder, siteCode) {
        creatModelUrl(folder, siteCode, initBim3D);
    }
    function creatModelUrl(folder, siteCode, callback) {
        var pathName = "http://" + window.location.host + "/" + '@ViewBag.BIMFolder' + "/" + siteCode + "/" + folder + "/";
        var jsonurl = pathName + folder + ".tmp.json";
        $.getJSON(jsonurl, function (data) {
            var url = pathName + data.files[0];
            callback(url);
        })
    }
</script>
<!--模型内置接口-->
<script type="text/javascript">
    //初始化插件
    // 父dom对象
    var domObj = document.getElementById('myContainer');
    var bim3dViewer = new BIM3DInterface(domObj);
    var myAxis = false;
    var fileArrays = [];
    var firstPosition = true;
    var currentSelectObj;
    var sysBaseUrl = "/";
    var commonModelId;
    $(function () {
        //initBim3D();
    });

    function initBim3D(pathName) {
        bim3dViewer.resize();
        //加载模型文件
        add3DModelFileToArray(pathName);
        //注册ESC事件
        $(document).keydown(function (event) {
            if (event.keyCode == 27) {
                exitMeasure();
                exitMark();
                //退出坐标轴剖切
                if (myAxis) {
                    exitAxisSlice();
                }
                //退出剖切盒
                exitBoxSlice();
                //直线法平面剖切
                exitEdgeSlice();
            }
        });

        bim3dViewer.addSelectObjectCallBack(function (object) {
            //可使用object.name属性在转换模型时的db文件中根据id查询相应的数据。
            // object对象或者object.name可直接用来调用相应的模型操作接口，例如颜色、透明度、可见性。
            currentSelectObj = object;
            if (object != undefined) {
                //选择零件数
                selectThePart(object);
                getModelPropertyInfo(object);
            } else {
                $('#modelInfoBox').css('display', 'none');
                $("#selectPartMain").empty();
            }
        });
        //设置选中高光颜色和强度
        bim3dViewer.setSelectColorIntensity(0x00FF00, 10);

    }
    //销毁BIMViewer
    function dispose3DModelViewer() {
        bim3dViewer.dispose();
    }
    //移除文件
    function remove3DModelFile() {
        bim3dViewer.removeFile(fileArrays);
        fileArrays = [];
    }
    //重置模型窗口大小
    function resize3DModelWindow() {
        bim3dViewer.resize();
    }
    //加载模型文件fileUrl：文件地址
    function add3DModelFileToArray(fileUrl, ids) {
        var result = $.inArray(fileUrl, fileArrays);
        if (result == -1) {
            //设置模型隐藏
            bim3dViewer.appendFile([fileUrl], true);
            bim3dViewer.addAppendFileCallBack(function (url, status) {
                //由于appendFile接口传入长度为2的数组，则该回调会调用两次。
                // 返回appendFile接口传入的url1,、url2模型文件的加载状态。
                // status 值为1加载成功，为0加载失败。
                if (status == 1) {
                    fileArrays.push(fileUrl)
                    //设置轮廓线颜色
                    bim3dViewer.setOutlineColor(0xff000000);
                    //设置轮廓线的宽度
                    bim3dViewer.setOutlineWidth(2);
                    // 设置模型隐藏
                    //bim3dViewer.setModelVisible("", false, 1);
                    //设置模型所有颜色
                    bim3dViewer.setModelColorByHex("", 0xA9A9A9, 1);
                    //设置模型状态颜色
                    setModelStateColour();
                    if (ids != undefined) {
                        var visible = true;
                        var setOption = 0;
                        bim3dViewer.setModelVisible(ids, visible, setOption);
                    }
                    //设置轮廓线显示隐藏
                    bim3dViewer.setOutlineVisible(true);
                }
            });
        } else {
            if (ids != undefined) {
                var visible = true;
                var setOption = 0;
                bim3dViewer.setModelVisible(ids, visible, setOption);
            }
        }
    }
    //选择零件数
    function selectThePart(selectObj) {
        if (selectObj != null) {
            var bool = $.isArray(selectObj)
            if (bool) {
                var len = selectObj.length;
                if (len > 0) {
                    $("#selectPartMain").empty();
                    //<p> 选择零件</p>
                    var selectPartStr = '<p>已选择零件:' + len + '个</p>';
                    $("#selectPartMain").append(selectPartStr);
                } else {
                    $("#selectPartMain").empty();
                }
            }
        }
    }
    //设置模型状态颜色
    function setModelStateColour() {
        var modelStateArray = [];
        var siteCodeObj = getSelectOrg_Index();
        if (siteCodeObj != undefined) {
            var siteCode = siteCodeObj.CompanyCode;
            $.ajax({
                type: "GET",
                url: sysBaseUrl + "api/WorkOrder/GetSiteCodeDetailsState?SiteCode=" + siteCode,
                dataType: "json",
                async: false,//同步
                success: function (resultdata) {
                    if (resultdata.data != null) {
                        modelStateArray = resultdata.data;
                    }
                },
                error: function (data, errorMsg) {
                    console.log(errorMsg)
                }
            });
        }

        if (modelStateArray.length > 0) {
            var orderPlacedArray = [];
            var processingArray = [];
            var completed = [];
            var installation = [];
            for (var i = 0, n = modelStateArray.length; i < n; i++) {
                var obj = modelStateArray[i];
                if (obj.Orderstate == '已下单') {
                    orderPlacedArray.push(obj.MxGjId);
                }
                if (obj.Orderstate == '加工中') {
                    processingArray.push(obj.MxGjId);
                }
                if (obj.Orderstate == '加工完成') {
                    completed.push(obj.MxGjId);
                }
                if (obj.Orderstate == '安装完成') {
                    installation.push(obj.MxGjId);
                }
            }
            //已下单
            if (orderPlacedArray.length > 0) {
                isOrderPlaced(orderPlacedArray);
            }
            //加工中
            if (processingArray.length > 0) {
                placeOrderComplete(processingArray);
            }
            //加工完成
            if (completed.length > 0) {
                componentSignForComplete(completed);
            }
            //安装完成
            if (installation.length > 0) {
                componentInstallComplete(installation);
            }
        }
    }

    //初次选中快速定位
    function fastPositioning(selectObj) {
        if (firstPosition) {
            var modelIdArray = [];
            for (var i = 0, n = selectObj.length; i < n; i++) {
                var obj = selectObj[i];
                modelIdArray.push(obj.name);
            }
            if (modelIdArray.length > 0) {
                bim3dViewer.zoomFit(modelIdArray, 10);
                firstPosition = false;
            }
        }
    }

    //获取展示模型具体信息
    function getModelPropertyInfo(selectObj) {
        $('#modelInfoBox').css('display', 'none');
        if (selectObj != null) {
            var bool = $.isArray(selectObj)
            if (bool) {
                fastPositioning(selectObj);
                if (selectObj.length == 1) {
                    var siteCodeObj = getSelectOrg_Index();
                    if (siteCodeObj != undefined) {
                        var siteCode = siteCodeObj.CompanyCode;
                        var modelId = selectObj[0].name;
                        commonModelId = modelId;
                        var modelPath = selectObj[0].parent.filename;
                        $("#modelInfoTitle").empty();
                        $("#propertyGroupList").empty();
                        var dataArray = [];
                        $.ajax({
                            type: "GET",
                            url: sysBaseUrl + "api/WorkOrder/GetComponentDetails?id=" + modelId + "&SiteCode=" + siteCode + "&modelPath=" + modelPath,
                            dataType: "json",
                            async: false, //同步
                            success: function (resultdata) {
                                if (resultdata != null && resultdata.data != null) {
                                    dataArray = resultdata.data;
                                }
                            },
                            error: function (data, errorMsg) {
                                console.log(errorMsg)
                            }
                        });
                        if (dataArray != null && dataArray.length > 0) {
                            //数字排序
                            dataArray.sort(function (a, b) {
                                var _a = a.name.match(/^(.*?)(\d*)$/);
                                var _b = b.name.match(/^(.*?)(\d*)$/);
                                if (_a[1] === _b[1]) {
                                    return parseInt(_a[2] || 0) - parseInt(_b[2] || 0);
                                } else {
                                    return _a[1].localeCompare(_b[1]);
                                }
                            })
                            dataArray.sort(function (a, b) {
                                var order = ["_设备编号", "_规格型号", "_设备材料名称", "_设备材料类型", "_子系统",
                                     "_系统", "_专业", "_位置", "_线路", "模型构件编码", ];
                                return order.indexOf(b.name) - order.indexOf(a.name);
                            });
                            dataArray.sort(function (a, b) {
                                // order是规则bai  objs是需要排序的du数组zhi
                                var order = ["内衬", "绝缘层", "阶段化", "标识数据", "限制条件", "机械 - 流量",
                                     "机械", "文字", "尺寸标注", "其他"];
                                return order.indexOf(b.propertygroup) - order.indexOf(a.propertygroup);
                            });
                            //获取分组数据
                            var groupObj = getPropertyGroupList(dataArray);
                            if (groupObj.family != undefined && groupObj.family != null) {
                                $("#modelInfoTitle").append('<div class="model-info-family">' + groupObj.family + '</div>');
                            }
                            if (groupObj.type != undefined && groupObj.type != null) {
                                $("#modelInfoTitle").append('<div class="model-info-type">' + groupObj.type + '</div>');
                            }
                            var groupList = groupObj.dataArray;
                            for (var i = 0; i < groupList.length; i++) {
                                var group = groupList[i];
                                var property = group.propertygroup;
                                var groupDatas = group.data;
                                var listStr = [];
                                for (var j = 0; j < groupDatas.length; j++) {
                                    var groupData = groupDatas[j];
                                    listStr.push('<li class="model-info-item-li"><div class="model-info-item-left" title="' + groupData.name + '">' +
                                        '<p class="model-info-item-text" >' + groupData.name + '</p >' +
                                        '</div><div class="model-info-item-right" title="' + groupData.value + '">' +
                                        '<p class="model-info-item-text" >' + groupData.value + '</p >' +
                                        '</div></li>');
                                }
                                var groupStr = '<li class="model-nav-item">' +
                                    '<a href="javascript:;" class="mu-item-wrapper"><div class="mu-item">' +
                                    '<div class="mu-item-action  "><i class="iconfont iconcaidan1 " style="font-size: 10px;"></i></div>' +
                                    '<div class="mu-item-title">' +
                                    property +
                                    '</div></div></a>' +
                                    '<ul>' +
                                    listStr.join('') +
                                    '</ul>' +
                                    '</li>';
                                $("#propertyGroupList").append(groupStr);
                            }
                            $('#modelInfoBox').css('display', 'block');
                            bindingClick();
                        }
                    }

                }
            }
        }
    }
    //绑定点击事件
    function bindingClick() {
        $('.model-nav-item>a').on('click',
           function () {
               if (!$('.nav').hasClass('nav-mini')) {
                   if ($(this).next().css('display') == "none") {
                       $('.model-nav-item').children('ul').slideUp(300);
                       $(this).next('ul').slideDown(300);
                       $(this).parent('li').addClass('nav-show').siblings('li').removeClass('nav-show');
                   } else {
                       $(this).next('ul').slideUp(300);
                       $('.model-nav-item.nav-show').removeClass('nav-show');
                   }
               }
           });
    }
    //是否取消信息提示框
    function isCancelInfotips(ids) {
        if (commonModelId != undefined) {
            var result = $.inArray(commonModelId, ids);
            if (result != -1) {
                cancelInfotips();
            }
        }
    }
    //取消信息提示框
    function cancelInfotips() {
        $('#modelInfoBox').css('display', 'none');
        $("#modelInfoTitle").empty();
        $("#propertyGroupList").empty();
        //清除选择零件
        $("#selectPartMain").empty();
    }

    //模型信息分组
    function getPropertyGroupList(dataArray) {
        var map = {},
            dest = [];
        var propertyObj = new Object();
        propertyObj.family = undefined;
        propertyObj.type = undefined;
        for (var i = 0; i < dataArray.length; i++) {
            var ai = dataArray[i];
            if (ai.name == '族') {
                propertyObj.family = ai.value
            }
            if (ai.name == '类型') {
                propertyObj.type = ai.value
            }
            if (!map[ai.propertygroup]) {
                dest.push({
                    propertygroup: ai.propertygroup,
                    data: [ai]
                });
                map[ai.propertygroup] = ai;
            } else {
                for (var j = 0; j < dest.length; j++) {
                    var dj = dest[j];
                    if (dj.propertygroup == ai.propertygroup) {
                        dj.data.push(ai);
                        break;
                    }
                }
            }
        }
        propertyObj.dataArray = dest;
        return propertyObj;
    }

    //#region 选中模型下单、签收、安装

    //下单
    function placeOrder() {
        modelInfoOperation(1);
    }

    //签收
    function componentSignFor() {
        modelInfoOperation(2);
    }

    //安装
    function componentInstall() {
        modelInfoOperation(3);
    }
    //已下单
    function isOrderPlaced(ids) {
        bim3dViewer.setModelColorByHex(ids, 0xFFFF00, 0);
    }
    //下单完成（加工中）
    function placeOrderComplete(ids) {
        bim3dViewer.setModelColorByHex(ids, 0xFF8C00, 0);
    }
    //签收完成（加工完成）
    function componentSignForComplete(ids) {
        bim3dViewer.setModelColorByHex(ids, 0x1E90FF, 0);
    }
    //安装完成
    function componentInstallComplete(ids) {
        bim3dViewer.setModelColorByHex(ids, 0x008000, 0);
    }
    //获取选中模型id数组
    function getModelIdArray() {
        var modelIdArray = [];
        if (currentSelectObj != undefined) {
            for (var i = 0, n = currentSelectObj.length; i < n; i++) {
                var obj = currentSelectObj[i];
                modelIdArray.push(obj.name);
            }
        }
        return modelIdArray;
    }
    //模型信息操作
    function modelInfoOperation(type) {
        var modelIdList = getModelIdArray();
        //判断选中的模型构建是否已经下单
        if (modelIdList.length > 0) {
            //下单
            if (type == 1) {
                IsModelIdPlaceOrder(modelIdList);
            }
            //签收
            if (type == 2) {
                IsModelPlaceOrderAndSignFor(modelIdList);
            }
            //安装
            if (type == 3) {
                IsModelPlaceOrderAndInstall(modelIdList);
            }
        } else {
            $.modalMsg("请选择模型中的构件信息！！", "warning");
            return false;
        }
    }
    //判断模型id是否已经下单
    function IsModelIdPlaceOrder(modelIdList) {
        $.ajax({
            url: "@Url.Action("IsModelIdPlaceOrder", "WorkOrder")",
            data: { modelIdList: modelIdList },
            dataType: "json",
            traditional: true, //默认false
            async: false,
            success: function (data) {
                if (data.state == "error") {
                    $.modalMsg(data.message, "warning");
                    return false;
                } else {
                    modelPlaceOrder(modelIdList);
                }
            }
        });
    }
    //判断模型id是否已经下单，同时是否已经签收
    function IsModelPlaceOrderAndSignFor(modelIdList) {
        $.ajax({
            url: "@Url.Action("IsPlaceOrderAndSignFor", "WorkOrder")",
            data: { modelIdList: modelIdList },
            dataType: "json",
            traditional: true, //默认false
            async: false,
            success: function (data) {
                if (data.state == "error") {
                    $.modalMsg(data.message, "warning");
                    return false;
                } else {
                    modelSignForOrder(modelIdList);
                }
            }
        });
    }

    //判断模型id是否已经下单，同时是否已经安装
    function IsModelPlaceOrderAndInstall(modelIdList) {
        $.ajax({
            url: "@Url.Action("IsPlaceOrderAndInstall", "WorkOrder")",
            data: { modelIdList: modelIdList },
            dataType: "json",
            traditional: true, //默认false
            async: false,
            success: function (data) {
                if (data.state == "error") {
                    $.modalMsg(data.message, "warning");
                    return false;
                } else {
                    modelInstallOrder(modelIdList);
                }
            }
        });
    }
    //#endregion

    //展示勾选模型 ids=["123","345"],文件地址modelFileUrl
    function showCheckModelViews(ids, modelFileUrl) {
        if (modelFileUrl != undefined && modelFileUrl != null && modelFileUrl != "") {
            add3DModelFileToArray(modelFileUrl, ids);
        } else {
            if (ids != undefined) {
                var visible = true;
                var setOption = 0;
                bim3dViewer.setModelVisible(ids, visible, setOption);
            }
        }
    }
    //隐藏勾选模型 ids=["123","345"]
    function hideCheckModelViews(ids) {
        var visible = false;
        var setOption = 0;
        bim3dViewer.setModelVisible(ids, visible, setOption);
        //判断是否取消显示信息框
        isCancelInfotips(ids);
    }
    //工点进度概况
    function progressOverview() {
        var show = $('.progress-overview-box').css('display');
        if (show != 'block') {
            var siteCodeObj = getSelectOrg_Index();
            var statisticsData = [];
            var siteName = "";
            //计划开始
            var PlanTime = "";
            //计划完成
            var ActualTime = "";
            //实际开始时间
            var BginTime = "";
            //月份（计划工期）
            var Month = 0;
            //计划总数
            var PlanTotalShow = '0/0/0';
            //未开始
            var NoStartShow = '0/0/0';
            //加工中总数
            var ProcessingTotalShow = '0/0/0';
            //加工完成总数
            var MachinTotalShow = '0/0/0';
            //安装完成总数
            var InstallTotalShow = '0/0/0';
            //超前完成总数
            var leaShow = '0/0/0';
            //滞后总数
            var lagShow = '0/0/0';
            if (siteCodeObj != undefined) {
                var siteCode = siteCodeObj.CompanyCode;
                siteName = siteCodeObj.CompanyFullNameShow;
                $.ajax({
                    type: "GET",
                    url: sysBaseUrl + "BIM/GetGISReportInfoList?SiteCode=" + siteCode,
                    dataType: "json",
                    async: false,//同步
                    success: function (resultdata) {
                        if (resultdata != null) {
                            statisticsData = resultdata;
                        }
                    },
                    error: function (data, errorMsg) {
                        console.log(errorMsg)
                    }
                });
            }
            if (statisticsData != null && statisticsData.length > 0) {
                var siteStatistics = statisticsData[0];
                PlanTime = siteStatistics.PlanTime;
                ActualTime = siteStatistics.ActualTime;
                BginTime = siteStatistics.BginTime;
                Month = siteStatistics.Month;
                PlanTotalShow = siteStatistics.PlanTotalShow;
                NoStartShow = siteStatistics.NoStartShow;
                ProcessingTotalShow = siteStatistics.ProcessingTotalShow;
                MachinTotalShow = siteStatistics.MachinTotalShow;
                InstallTotalShow = siteStatistics.InstallTotalShow;
                leaShow = siteStatistics.leaShow;
                lagShow = siteStatistics.lagShow;
            }
            var htmlStr = '<div class="progress-overview-points">工点进度概况</div>' +
                        '<div class="hrm hr-dotted" style="margin: 1px 0;"></div>' +
                        '<div class="progress-first-item">' +
                            '<div class="progress-overview-head">' + siteName + '</div>' +
                            '<div class="overview-info-item">' +
                               ' <div class="overview-info-left">计划开始</div>' +
                                '<div class="overview-info-right">计划完成</div>' +
                           ' </div>' +
                            '<div class="overview-info-item">' +
                                '<div class="overview-info-left" style="color: #CDC5BF">' + PlanTime + '</div>' +
                                '<div class="overview-info-right" style="color: #CDC5BF">' + ActualTime + '</div>' +
                            '</div>' +
                            '<div class="overview-info-item">' +
                                '<div class="overview-info-left">实际开始</div>' +
                                '<div class="overview-info-right">计划工期</div>' +
                            '</div>' +
                           ' <div class="overview-info-item">' +
                              '  <div class="overview-info-left" style="color: #CDC5BF">' + BginTime + '</div>' +
                                '<div class="overview-info-right" style="color: #CDC5BF">' + Month + '个月</div>' +
                            '</div>' +
                       ' </div>' +
                       ' <div class="hrm hr-dotted" style="margin: 1px 0;"></div>' +
                       ' <div class="progress-next-item">' +
                           ' <div class="progress-next-component">' +
                                '<p style="font-size:12px; display: inline-block;-webkit-transform:scale(0.9); ">构件进度</p>' +
                           ' </div>' +
                            '<div class="progress-next-type">' +
                               ' <p style="font-size:12px; display: inline-block;-webkit-transform:scale(0.75); ">（类型数/名称数/件数）</p>' +
                          '  </div>' +
                            '<div class="overview-info-item">' +
                              '  <div class="overview-info-left">计划总数</div>' +
                               ' <div class="overview-info-right">' + PlanTotalShow + '</div>' +
                           ' </div>' +
                           ' <div class="overview-info-item">' +
                                '<div class="overview-info-left">未开始</div>' +
                                '<div class="overview-info-right">' + NoStartShow + '</div>' +
                           ' </div>' +
                            '<div class="overview-info-item">' +
                                '<div class="overview-info-left">加工中</div>' +
                                '<div class="overview-info-right">' + ProcessingTotalShow + '</div>' +
                            '</div>' +
                            '<div class="overview-info-item">' +
                               ' <div class="overview-info-left">加工完成</div>' +
                               ' <div class="overview-info-right">' + MachinTotalShow + '</div>' +
                           ' </div>' +
                            '<div class="overview-info-item">' +
                                '<div class="overview-info-left">安装完成</div>' +
                                '<div class="overview-info-right">' + InstallTotalShow + '</div>' +
                           ' </div>' +
                      '  </div>' +
                       ' <div class="hrm hr-dotted" style="margin: 1px 0;"></div>' +
                       ' <div class="progress-last-item" style="height: 40px">' +
                            '<div class="overview-info-item">' +
                               ' <div class="overview-info-left">进度超前</div>' +
                               ' <div class="overview-info-right" style="color: #00FF7F">' + leaShow + '</div>' +
                          '  </div>' +
                            '<div class="overview-info-item">' +
                               ' <div class="overview-info-left">进度滞后</div>' +
                                '<div class="overview-info-right" style="color: #FF0000">' + lagShow + '</div>' +
                            '</div>' +
                        '</div>';
            $("#progressOverviewMain").append(htmlStr);
        }
        show == 'block' ? $('.progress-overview-box').css('display', 'none') : $('.progress-overview-box').css('display', 'block');
    }
    //定位模型及高亮
    function locationModelAndSetColour(ids) {
        //bim3dViewer.setModelColorByHex(ids, 0x00FFFF, 0);
        bim3dViewer.setModelSelection(ids, false);
        bim3dViewer.zoomFit(ids, 5);
    }
    //隐藏选中模块
    function setModelHide() {
        var modelIdList = getModelIdArray();
        if (modelIdList.length > 0) {
            //visible 是否可见，true显示，false隐藏。
            var visible = false;
            var setOption = 0;
            bim3dViewer.setModelVisible(modelIdList, visible, setOption);
        }
    }

    //隐藏非选中模块
    function setOtherModelHide() {
        var modelIdList = getModelIdArray();
        if (modelIdList.length > 0) {
            //visible 是否可见，true显示，false隐藏。
            var visible = false;
            var setOption = 1;
            bim3dViewer.setModelVisible(modelIdList, visible, setOption);
        }
    }

    /**
     * 取消隐藏
     */
    function cancelModelHide() {
        if (currentSelectObj != undefined) {
            var id = "";
            var visible = true;
            var setOption = 1;
            bim3dViewer.setModelVisible(id, visible, setOption);
        }
    }

    /**
     * 隔离选中模块
     */
    function setModelQuarantine() {
        var modelIdList = getModelIdArray();
        if (modelIdList.length > 0) {
            //是否隔离对象，true隔离，false取消隔离
            var bQuarantine = true;
            var setOption = 0;
            bim3dViewer.setModelQuarantine(modelIdList, bQuarantine, setOption);
        }
    }

    /**
     * 隔离非选中模块
     */
    function setOtherModelQuarantine() {
        var modelIdList = getModelIdArray();
        if (modelIdList.length > 0) {
            //是否隔离对象，true隔离，false取消隔离
            var bQuarantine = true;
            var setOption = 1;
            bim3dViewer.setModelQuarantine(modelIdList, bQuarantine, setOption);
        }
    }

    /**
     * 取消隔离
     */
    function cancelModelQuarantine() {
        var id = "";
        //是否隔离对象，true隔离，false取消隔离
        var bQuarantine = false;
        var setOption = 1;
        bim3dViewer.setModelQuarantine(id, bQuarantine, setOption);
    }

    /**
     * 坐标测量
     */
    function coordinateMeasure() {
        bim3dViewer.measurePoint(false);
    }

    /**
     * 两点距离测量
     */
    function twoPointsDistance() {
        bim3dViewer.measurePtop();
    }

    /**
     * 点线距离测量
     */
    function pointLineDistance() {
        bim3dViewer.measureLtop();
    }

    /**
     * 点面距离测量
     */
    function pointFaceDistance() {
        bim3dViewer.measureFtop();
    }

    /**
     * 对象间距离测量
     */
    function twoFacesDistance() {
        bim3dViewer.measureLtol();
    }

    /**
     * 三点角度测量
     */
    function threePointsAngle() {
        bim3dViewer.measureAngleByPoints();
    }

    /**
     * 三点圆半径测量
     */
    function threePointsRadius() {
        bim3dViewer.measureRadius();
    }

    /**
     * 表面面积
     */
    function getFaceArea() {
        bim3dViewer.measureArea();
    }

    /**
     * 对象体积
     */
    function getModelVolume() {
        bim3dViewer.measureVolume();
    }

    /**
     * 退出测量
     */
    function exitMeasure() {
        bim3dViewer.endMeasure();
    }

    //剖切查看
    /**
     * 自由剖切
     */
    function startFaceSlice() {
        bim3dViewer.startSliceByFace();
    }

    /**
     * XY剖切
     */
    function startXYSlice() {
        //2对应z轴即xy平面
        bim3dViewer.startSliceModelByAxis(2);
        myAxis = true;
    }

    /**
     * YZ剖切
     */
    function startYZSlice() {
        //0对应x轴即yz平面
        bim3dViewer.startSliceModelByAxis(0);
        myAxis = true;
    }

    /**
     * ZX剖切
     */
    function startZXSlice() {
        //1对应y轴即xz平面
        bim3dViewer.startSliceModelByAxis(1);
        myAxis = true;
    }

    /**
     * 退出坐标轴剖切
     */
    function exitAxisSlice() {
        for (var i = 1, n = 4; i < n; i++) {
            bim3dViewer.endSliceModelByAxis(i);
        }
        myAxis = false;
    }

    /**
     * 打开剖切盒
     */
    function startBoxSlice() {
        bim3dViewer.startBoxClip();
    }

    /**
     * 退出剖切盒
     */
    function exitBoxSlice() {
        bim3dViewer.endBoxClip();
    }

    /**
     *开始直线法平面剖切
     */
    function startEdgeSlice() {
        bim3dViewer.startSliceByEdge();
    }

    /**
     *退出直线法平面剖切
     */
    function exitEdgeSlice() {
        bim3dViewer.endSliceByEdge();
    }
    /**
     * 开启剖切面罗盘
     */
    function openSliceCompass() {
        //false 显示
        bim3dViewer.hiddenCap(false);
        //false显示
        bim3dViewer.hiddenCapGizmo(false);
    }
    /**
     * 关闭剖切面罗盘
     */
    function closeSliceCompass() {
        bim3dViewer.hiddenCap(true);
        bim3dViewer.hiddenCapGizmo(true);
    }

    //视图标注

    /**
     * 文字标注
     */
    function wordsMark() {
        bim3dViewer.textMark();
    }

    /**
     * 矩形标注
     */
    function rectangleMark() {
        bim3dViewer.rectMarkWithPanel();
    }

    /**
     * 圆形标注
     */
    function circularMark() {
        bim3dViewer.circleMarkWithPanel();
    }

    /**
     * 圆形标注
     */
    function ellipseMark() {
        bim3dViewer.ellipseMarkWithPanel();
    }

    /**
     * 箭头标注
     */
    function arrowheadMark() {
        bim3dViewer.arrowMarkWithPanel();
    }

    /**
     * 多边形标注
     */
    function polygonMark() {
        bim3dViewer.regularPolygonMarkWithPanel();
    }

    /**
     * 退出标注
     */
    function exitMark() {
        bim3dViewer.endMark();
    }

    $(function () {
        $(".navmenu").mouseover(function () {
            $(this).children("ul").show();
        })
        $(".navmenu").mouseout(function () {
            $(this).children("ul").hide();
        })
    });
</script>